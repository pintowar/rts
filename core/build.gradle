plugins {
    id 'groovy'
    id 'application'
    id "com.github.johnrengelman.shadow" version "1.2.4"
    //id "com.github.tkruse.groovysh" version "1.0.8"
    //id 'ru.vyarus.quality' version '1.2.0'
}

version "0.1"
group "br.uece.goes.rts"

mainClassName = "br.uece.goes.rts.app.Main"

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.7'
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'io.jenetics:jenetics:3.7.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
    runtime 'ch.qos.logback:logback-classic:1.1.7'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-3'
}

//task(tasksDependencies) {
//    def path = file('src/main/resources/')
//    def docpath = file('src/docs/tasks/')
//
//    path.eachFile { f -> generateDepGraph(docpath, f) }
//}
//
//def generateDepGraph(path, file) {
//    def dot = new File(path, file.name.replace('.txt','.dot'))
//    dot.text = dotGraph(file)
//    def proc = "dot ${dot.absolutePath} -Tpng -o ${dot.absolutePath.replace('.dot','.png')}".execute()
//    proc.waitFor()
//    dot.delete()
//}
//
//def dotGraph(file) {
//    def tasks = file.text.split(/=+/).last().trim()
//    def deps = tasks.split('\n').tail().collect { it.split(',')[0, 3] }
//    .findAll { it[-1] != '-1' }
//    .collect { "  " + it.collect { el -> "\"Task ${el.padLeft(3, '0')}\"" }.join(' -> ') }
//    """
//    |digraph G {
//    |${deps.join('\n')}
//    |}
//    """.stripMargin().trim()
//}
